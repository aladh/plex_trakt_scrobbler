stages:  - build  - test  - deployinclude:  - template: Security/Container-Scanning.gitlab-ci.yml  - template: Security/Dependency-Scanning.gitlab-ci.yml  - template: Security/SAST.gitlab-ci.yml  - template: Security/Secret-Detection.gitlab-ci.ymlcontainer_scanning:  variables:    DOCKER_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHAlint:  stage: test  image: golangci/golangci-lint:v1.45.2  script:    - golangci-lint run -v -E gofmt -E goconst -E gocritic -E gocognit -E gocyclo  except:    - schedulesend-to-end:  stage: test  image: golang:1.18-bullseye  variables:    ENABLE_E2E_TESTS: 1    PLEX_SERVER_UUIDS: test-uuid    PLEX_USERNAME: test-user  script:    - go test -v .  only:    - mastercontainer-image:  stage: build  image: docker:latest  services:    - docker:dind  before_script:    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY  script:    - docker build --pull -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA" .    - docker tag "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA" $CI_REGISTRY_IMAGE    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA"    - docker push $CI_REGISTRY_IMAGE  except:    - schedulescloud-run:  stage: deploy  image: google/cloud-sdk  services:    - docker:dind  variables:    SOURCE_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA    DESTINATION_IMAGE: us.gcr.io/$GCP_PROJECT_ID/$CI_PROJECT_NAME:$CI_COMMIT_SHORT_SHA    DOCKER_HOST: 'tcp://docker:2375'  before_script:    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY    - docker login -u _json_key -p "$(cat $SERVICE_ACCOUNT)" https://us.gcr.io    - gcloud auth activate-service-account --key-file $SERVICE_ACCOUNT  script:    - docker pull $SOURCE_IMAGE    - docker tag $SOURCE_IMAGE $DESTINATION_IMAGE    - docker push $DESTINATION_IMAGE    - gcloud run deploy $SERVICE_NAME      --project $GCP_PROJECT_ID      --platform managed      --region $GCP_REGION      --image $DESTINATION_IMAGE      --set-env-vars TRAKT_CLIENT_ID=${TRAKT_CLIENT_ID}      --set-env-vars TRAKT_ACCESS_TOKEN=${TRAKT_ACCESS_TOKEN}      --set-env-vars PLEX_SERVER_UUIDS=${PLEX_SERVER_UUIDS}      --set-env-vars PLEX_USERNAME=${PLEX_USERNAME}      --set-env-vars WEBHOOK_URL=${WEBHOOK_URL}  after_script:    - gcloud container images delete $DESTINATION_IMAGE --force-delete-tags  environment:    name: production  only:    - master  except:    - schedules